# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Deploy to internal test application"
  
  lane :internal do 
    version_code = getVersionCode(getVersionInfo())
    version_name = getVersionName(getVersionInfo())
    flutter_build(version_name,version_code)

    upload_to_play_store(
      track: 'internal',
      version_code: version_code,
      aab: '../build/app/outputs/bundle/release/app-release.aab',
    )
  end

  lane :alpha do 
    version_code = getVersionCode(getVersionInfo())
    version_name = getVersionName(getVersionInfo())
    flutter_build(version_name,version_code)

    upload_to_play_store(
      track: 'alpha',
      version_code: version_code,
      aab: '../build/app/outputs/bundle/release/app-release.aab',
    )
  end


  lane :beta do 
    version_code = getVersionCode(getVersionInfo())
    version_name = getVersionName(getVersionInfo())
    flutter_build(version_name,version_code)

    upload_to_play_store(
      track: 'beta',
      version_code: version_code,
      aab: '../build/app/outputs/bundle/release/app-release.aab',
    )
  end

  lane :production do 
    version_code = getVersionCode(getVersionInfo())
    version_name = getVersionName(getVersionInfo())
    flutter_build(version_name,version_code)

    upload_to_play_store(
      track: 'production',
      version_code: version_code,
      aab: '../build/app/outputs/bundle/release/app-release.aab',
    )
  end


  def getVersionInfo()
    version_info = flutter_version(
      pubspec_location: '../pubspec.yaml'
    )
  end

  def getVersionCode(version_info)
    return version_info['version_code']
  end

  def getVersionName(version_info)
    return version_info['version_name']
  end

  def flutter_build(versionName,number)
  
    Dir.chdir '../../' do
      sh('flutter', 'packages', 'get')
      sh('flutter', 'clean')
      sh(
        "flutter build appbundle --build-name=#{
          versionName
        } --build-number=#{number.to_s}"
      )
    end
  end

end